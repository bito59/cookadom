$(document).on("click", function(event) {
	    if (!$(event.target).parents('.no_hide').length) {
	    	if ($("#account").is(":visible")) {
				$("#account").fadeOut("slow");
	    	}
	    }
	    if (!$(event.target).parents('.user_area').length) {
	    	if ($("#user_popup").is(":visible")) {
				$("#user_popup").fadeOut("slow");
	    	}
	    }
	});

	$('#create_account').click(function() {
		$('#create_form').fadeIn("slow");
		$('#connect_form').hide();
		$('#account').fadeIn("slow");
	});

	$('#connect_account').click(function() {
		$('#connect_form').fadeIn("slow");
		$('#create_form').hide();
		$('#account').fadeIn("slow");
	});

	$('#user_link').click(function() {
		$('#user_popup').fadeIn("slow");
	});

#account{style: "display:none"}
				#connect_form{style: "display:none"}
					= render :partial => 'users/connect_account'
				#create_form{style: "display:none"}
					= render :partial => 'users/create_account'

//.btn_search_cook
	//= submit_tag "voir les cooks", class: 'search_cook'
	//= image_tag "icons/chef.png", class: "icon_seach_cook"


{style: "background-image: url(<%= welcome_font/welcome#{rand(5)}.jpg' %>)"}

.nav.navbar.navbar-default
		.container-fluid
			.navbar-header
				= link_to "Cook@dom", root_path, class: "navbar-brand logo"
			%ul.nav.navbar-nav.navbar-right
				- if user_signed_in?
					.user_area
						#user_link.user_link
							= content_tag("a", current_user.pseudo)
						#user_popup.user_popup
							= link_to "mon compte", user_path(current_user)
							= link_to "mes recettes", user_recipebook_path(@user)
							= link_to "Déconnection", destroy_user_session_path, method: :delete
							//content_tag(:li, link_to("3", users_path))
				- else
					%li= link_to "Créer mon compte", '', remote: true, id: "create_account"
					%li= link_to "Connection", '', remote: true, id: "connect_account"



dishtype_list = [
  [ "Plat", 0 ],
  [ "Entrée", 1 ],
  [ "Dessert", 2 ],
  [ "Soupe", 3 ],
  [ "Fromage", 4 ],
  [ "Apéro", 5 ],
  [ "Cocktail", 6 ],
  [ "Vin", 7 ],
]

dishtype_list.each do |name, id|
  Dishtype.create( name: name, id: id )
end


// AJAX with Json
	$(document).ready(function(){
	    $('#dish_type').editable({
	        ajaxOptions:{
	            type: 'put',
	            dataType: 'json'
	        },
	        success: function(response, newValue) {
	            if(!response.success) alert(response.msg);
	        }
	    });
	});



// balise a for bootstrap-x-editable-rails
.row
	%a{"href"=>"#", "id"=>"dish_type", "data-model"=>"recipe", "data-xeditable"=>"true", "data-type"=>"text", "data-pk"=>@recipe.id, "data-url"=>"/recipes/" + @recipe.id.to_s, "data-title"=>"Enter dish_type"}
		= @recipe.dish_type


//- logger.info("My object: #{@rank_list}")

//$("#directions").append("<%= j render 'shared/direction', direction: @direction %>");
$('.delete_direction').bind('ajax:success', function() {
	//$(this).parentNode.id.fadeOut();
	//$(this).fadeOut();
	$(this).closest('div').remove();
}); 

devise create user
		<%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
		  <%= f.error_notification %>

		  <div class="form-inputs">
		    <%= f.input :email, required: true, autofocus: true, input_html: { class: 'form-control' } %>
		    <%= f.text_field :pseudo, required: true %>
		    <%= f.input :password, required: true, input_html: { class: 'form-control' }, hint: ("#{@minimum_password_length} characters minimum" if @minimum_password_length) %>
		    <%= f.input :password_confirmation, required: true, input_html: { class: 'form-control' } %>
		  </div>

		  <div class="form-actions">
		    <%= f.button :submit, "Sign up", class: "btn btn-primary" %>
		  </div>
		<% end %>

		<%= render "devise/shared/links" %>

				respond_to do |format|
	      if @user.update(user_params)
	      	format.html { redirect_to "", notice: 'Votre compte a bien été modifié.' }
	        format.json { head :no_content }
	      else
	      	format.html { redirect_to "", notice: 'Problème dans la modification !' }
	        format.json { render json: @user.errors, status: :unprocessable_entity }
	      end
	    end


	    if cook.distance_from(coordinates).to_f < cook.working_distance.to_f + 10
				@cooks[cook.title] = {details: cook, distance: dist, nb_recipes: nb_recipes, nb_avis: nb_avis, nb_stars: nb_stars}
				if cook.distance_from(coordinates) < cook.working_distance.to_f
					@cooks[cook.title][:in_range] = "OK"
				else
					@cooks[cook.title][:in_range] = "QUESTION"
				end
			end



def search_recipes(coordinates)
		search_cooks(coordinates)	
		Cook.all.each do |cook|
			if cook.distance_from(coordinates).to_f < cook.working_distance.to_f + 10
				dist = cook.distance_from(coordinates).round(1).to_s
				Recipe.where(cook_id: cook.id).each do |recipe|
					recipe.dist = dist
					if cook.distance_from(coordinates) < cook.working_distance.to_f
						recipe.in_range = "OK"
					else
						recipe.in_range = "QUESTION"
					end
					@recipes.push recipe
					#{puts recipe.to_yaml
				end
			end
		end
		if @recipes.blank?
			@message = "Aucune recette n'a été trouvée autour de cette addresse..."
		else
			@recipes.sort_by { |v| v[:cook_id] }.to_h
			@message = @recipes.count.to_s + " recette".pluralize(@recipes.count) + " trouvée".pluralize(@recipes.count) + " autour de cette adresse..."
		end
	end	

	
	$("#btn_save").click(function(e) {
		$('#btn_modify').show();
		$('#btn_save').hide();
	});
	
	